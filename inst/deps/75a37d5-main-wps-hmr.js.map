{"version":3,"sources":["webpack:///./src/lib/components/TextInput.react.js"],"names":["TextInput","props","useState","value","setValue","updateValue","e","target","setProps","label","defaultProps","propTypes","id","PropTypes","string"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAMA,SAAS,GAAG,SAAZA,SAAY,CAACC,KAAD,EAAW;EACzB,gBAA0BC,sDAAQ,CAC9BD,KAAK,CAACE,KAAN,IAAe,IAAf,GAAsBF,KAAK,CAACE,KAA5B,GAAoC,eADN,CAAlC;EAAA;EAAA,IAAOA,KAAP;EAAA,IAAcC,QAAd;;EAIA,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,CAAD,EAAO;IACvBF,QAAQ,CAACE,CAAC,CAACC,MAAF,CAASJ,KAAV,CAAR;IACAK,QAAQ,CAAC;MAACL,KAAK,EAAEG,CAAC,CAACC,MAAF,CAASJ;IAAjB,CAAD,CAAR;EACH,CAHD;;EAKA,oBACI,qIAEI,0EAAQF,KAAK,CAACQ,KAAd,CAFJ,eAGI,sEAHJ,eAII;IAAO,KAAK,EAAEN,KAAd;IAAqB,QAAQ,EAAEE;EAA/B,EAJJ,eAKI,sEAAIF,KAAJ,CALJ,CADJ;AASH,CAnBD;;AAoBAH,SAAS,CAACU,YAAV,GAAyB;EACrBD,KAAK,EAAE;AADc,CAAzB;AAGAT,SAAS,CAACW,SAAV,GAAsB;EAClB;AACJ;AACA;EACIC,EAAE,EAAEC,iDAAS,CAACC,MAJI;;EAKlB;AACJ;AACA;EACIL,KAAK,EAAEI,iDAAS,CAACC,MARC;;EASlB;AACJ;AACA;EACIX,KAAK,EAAEU,iDAAS,CAACC;AAZC,CAAtB;AAced,wEAAf,E","file":"75a37d5-main-wps-hmr.js","sourcesContent":["import React, {useState} from 'react';\nimport PropTypes from 'prop-types';\n/**\n * TextInput is an example component.\n * It takes a property, `label`, and\n * displays it.\n * It renders an input with the property `value`\n * which is editable by the user.\n */\nconst TextInput = (props) => {\n    const [value, setValue] = useState(\n        props.value != null ? props.value : 'Default value'\n    );\n\n    const updateValue = (e) => {\n        setValue(e.target.value);\n        setProps({value: e.target.value});\n    };\n\n    return (\n        <>\n            {/* <label>{props.label != null ? props.label : 'DEFAULT LABEL'}</label> */}\n            <label>{props.label}</label>\n            <br />\n            <input value={value} onChange={updateValue} />\n            <p>{value}</p>\n        </>\n    );\n};\nTextInput.defaultProps = {\n    label: 'Default Label with defaultProps',\n};\nTextInput.propTypes = {\n    /**\n     * The ID used to identify this component in Dash callbacks.\n     */\n    id: PropTypes.string,\n    /**\n     * The label used to show above of the input\n     */\n    label: PropTypes.string,\n    /**\n     * The value used to set the default value for the input\n     */\n    value: PropTypes.string,\n};\nexport default TextInput;\n"],"sourceRoot":""}