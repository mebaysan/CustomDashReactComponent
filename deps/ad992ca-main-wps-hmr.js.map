{"version":3,"sources":["webpack:///./src/lib/components/BaysanMap.react.js"],"names":["BaysanMap","props","useState","type","features","data","setData"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAMA,SAAS,GAAG,SAAZA,SAAY,CAACC,KAAD,EAAW;EACzB,gBAAwBC,sDAAQ,CAAC;IAACC,IAAI,EAAE,mBAAP;IAA4BC,QAAQ,EAAE;EAAtC,CAAD,CAAhC;EAAA;EAAA,IAAOC,IAAP;EAAA,IAAaC,OAAb,iBADyB,CAGzB;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;;EAEA,oBAAO,6EAAP;AACH,CAzED,C,CA0EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACeN,wEAAf,E","file":"ad992ca-main-wps-hmr.js","sourcesContent":["import React, {useState} from 'react';\nimport PropTypes from 'prop-types';\nimport {AreaMap} from '@ant-design/maps';\n\n/**\n * BaysanMap is an example component.\n * It takes a property, `label`, and\n * displays it.\n * It renders an input with the property `value`\n * which is editable by the user.\n */\nconst BaysanMap = (props) => {\n    const [data, setData] = useState({type: 'FeatureCollection', features: []});\n\n    // useEffect(() => {\n    //     asyncFetch();\n    // }, []);\n\n    // const asyncFetch = () => {\n    //     fetch(\n    //         'https://gw.alipayobjects.com/os/basement_prod/d36ad90e-3902-4742-b8a2-d93f7e5dafa2.json'\n    //     )\n    //         .then((response) => response.json())\n    //         .then((json) => setData(json))\n    //         .catch((error) => {\n    //             console.log('fetch data failed', error);\n    //         });\n    // };\n    // const color = [\n    //     'rgb(255,255,217)',\n    //     'rgb(237,248,177)',\n    //     'rgb(199,233,180)',\n    //     'rgb(127,205,187)',\n    //     'rgb(65,182,196)',\n    //     'rgb(29,145,192)',\n    //     'rgb(34,94,168)',\n    //     'rgb(12,44,132)',\n    // ];\n    // const config = {\n    //     map: {\n    //         type: 'mapbox',\n    //         style: 'blank',\n    //         center: [120.19382669582967, 30.258134],\n    //         zoom: 3,\n    //         pitch: 0,\n    //     },\n    //     source: {\n    //         data: data,\n    //         parser: {\n    //             type: 'geojson',\n    //         },\n    //     },\n    //     autoFit: true,\n    //     color: {\n    //         field: 'density',\n    //         value: color,\n    //         scale: {\n    //             type: 'quantile',\n    //         },\n    //     },\n    //     style: {\n    //         opacity: 1,\n    //         stroke: 'rgb(93,112,146)',\n    //         lineType: 'dash',\n    //         lineDash: [2, 2],\n    //         lineWidth: 0.6,\n    //         lineOpacity: 1,\n    //     },\n    //     state: {\n    //         active: true,\n    //         select: true,\n    //     },\n    //     tooltip: {\n    //         items: ['name', 'density'],\n    //     },\n    //     zoom: {\n    //         position: 'bottomright',\n    //     },\n    //     legend: {\n    //         position: 'bottomleft',\n    //     },\n    // };\n\n    return <h1>DEM</h1>;\n};\n// BaysanMap.defaultProps = {\n//     label: 'Default Label with defaultProps',\n// };\n// BaysanMap.propTypes = {\n//     /**\n//      * The ID used to identify this component in Dash callbacks.\n//      */\n//     id: PropTypes.string,\n//     /**\n//      * The label used to show above of the input\n//      */\n//     label: PropTypes.string,\n//     /**\n//      * The value used to set the default value for the input\n//      */\n//     value: PropTypes.string,\n// };\nexport default BaysanMap;\n"],"sourceRoot":""}